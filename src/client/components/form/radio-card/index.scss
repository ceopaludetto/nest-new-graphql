@import "~@/client/styles/variables";

.radio-card {
  margin-bottom: get-theme-prop(layout, sizes, 5);
  padding: get-theme-prop(layout, sizes, 6) get-theme-prop(layout, sizes, 4);
  display: flex;
  align-items: center;
  border-radius: get-theme-prop(layout, shape);
  background-color: get-color(paper, lighten-1);
  position: relative;
  transition: transition((border-color));
  @media (prefers-color-scheme: dark) {
    border: 2px solid get-color(paper, lighten-2);
  }
  @media (prefers-color-scheme: light) {
    border: 2px solid get-color(background, darken-2);
  }
  @each $k, $v in map-get($colors, light) {
    &.#{$k} {
      &:focus-within {
        border-color: get-color($k);
      }
    }
  }
  &.error {
    border-color: get-color(error) !important;
  }
  .input {
    cursor: pointer;
    opacity: 0;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    &:focus:not(:checked),
    &:focus:not([checked]) {
      & + .radio::before {
        background-color: get-color(background, darken-1);
      }
    }
    &:checked,
    &[checked] {
      & + .radio::after {
        transform: scale(1);
      }
    }
    @each $k, $v in map-get($colors, light) {
      &:active,
      &[checked],
      &:checked {
        & + .radio.#{$k} {
          &::before {
            background-color: get-color($k);
          }
          &::after {
            background-color: get-color($k, contrast);
          }
        }
      }
      &:focus {
        &:checked,
        &[checked] {
          & + .radio.#{$k}::before {
            background-color: get-color($k, darken-1);
          }
        }
      }
    }
  }
  .radio {
    width: 20px;
    height: 20px;
    position: relative;
    margin-right: get-theme-prop(layout, sizes, 4);
    pointer-events: none;
    &::before {
      content: "";
      transition: transition((background-color));
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-radius: 9999px;
      background-color: get-color(background, darken-2);
    }
    &::after {
      content: "";
      transition: transition((background-color, transform));
      position: absolute;
      left: 4px;
      top: 4px;
      width: calc(100% - 8px);
      height: calc(100% - 8px);
      border-radius: 9999px;
      transform: scale(0);
    }
    &.error {
      &::before {
        background-color: get-color(error) !important;
      }
      &::after {
        background-color: get-color(error, contrast) !important;
      }
    }
  }
}

.helper {
  margin-top: get-theme-prop(layout, sizes, 3);
  transition: transition((color));
  padding-left: get-theme-prop(layout, sizes, 4);
  &.error {
    color: get-color(error) !important;
  }
}
