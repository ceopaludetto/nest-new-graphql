@import "~@/client/styles/variables";

.radio-card {
  align-items: center;
  border: 1px solid get-shadow-color(text, 0.12);
  border-radius: get-theme-prop(layout, shape);
  column-gap: get-theme-prop(layout, gap);
  display: flex;
  margin-bottom: get-theme-prop(layout, gap) * 2;
  padding: get-theme-prop(layout, sizes, 5) get-theme-prop(layout, sizes, 4);
  position: relative;
  transition: transition((border-color, background-color));
  @each $k, $v in map-get($colors, light) {
    &.#{$k} {
      &:focus-within {
        border-color: get-color($k);
      }
    }
  }
  .input {
    cursor: pointer;
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 100%;
    &:focus:not(:checked),
    &:focus:not([checked]) {
      + .radio::before {
        background-color: get-color(background, darken-1);
      }
    }
    &:matches(:checked, [checked]) {
      + .radio::after {
        transform: scale(1);
      }
    }
    @each $k, $v in map-get($colors, light) {
      &:matches(:active, [checked], :checked) {
        + .radio.#{$k} {
          &::before {
            background-color: get-color($k);
          }
          &::after {
            background-color: get-color($k, contrast);
          }
        }
      }
      &:focus:matches(:checked, [checked]) {
        + .radio.#{$k}::before {
          background-color: get-color($k, darken-1);
        }
      }
    }
  }
  .radio {
    height: 20px;
    pointer-events: none;
    position: relative;
    width: 20px;
    &::before {
      background-color: get-color(background, darken-2);
      border-radius: 9999px;
      content: "";
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      transition: transition((background-color));
      width: 100%;
    }
    &::after {
      border-radius: 9999px;
      content: "";
      height: calc(100% - 8px);
      left: 4px;
      position: absolute;
      top: 4px;
      transform: scale(0);
      transition: transition((background-color, transform));
      width: calc(100% - 8px);
    }
    &.error {
      &::before {
        background-color: get-color(error) !important;
      }
      &::after {
        background-color: get-color(error, contrast) !important;
      }
    }
  }
}

.helper {
  margin-top: get-theme-prop(layout, sizes, 3);
  padding-left: get-theme-prop(layout, sizes, 4);
  transition: transition((color));
}
